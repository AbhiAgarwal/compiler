 // CRSX RULES FOR edu.nyu.csci.cc.fall14.Pr3Base.

Pr3Base[(

// Print uses text.
  $CheckGrammar["net.sf.crsx.text.Text"];
  $Use["net/sf/crsx/text/Text.crs"];

// Standard functions.
  $Use["org/crsx/hacs/Prelude.crs"];

// Infer options.
  $Lax;

/////////////////////////////////////////////////////////////////////////////
// DECLARATIONS AND OUTPUT.



'$Print-Pr3Base$Arg' [Pr3Base$Arg] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Arg' [#] → '$Print2-Pr3Base$Arg' [#, 0] ;


'$Print-Pr3Base$Program' [Pr3Base$Program] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Program' [#] → '$Print2-Pr3Base$Program' [#, 0] ;


'$Print-Pr3Base$Integers' [Pr3Base$Integers] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Integers' [#] → '$Print2-Pr3Base$Integers' [#, 0] ;


'$Print-Pr3Base$Integer' [Pr3Base$Integer] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Integer' [#] → '$Print2-Pr3Base$Integer' [#, 0] ;


'$Print-Pr3Base$Constant' [Pr3Base$Constant] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Constant' [#] → '$Print2-Pr3Base$Constant' [#, 0] ;


'$Print-Pr3Base$ArgumentSignature' [Pr3Base$ArgumentSignature] :: Text ;
-[Data[#]]: '$Print-Pr3Base$ArgumentSignature' [#] → '$Print2-Pr3Base$ArgumentSignature' [#, 0] ;


'$Print-Pr3Base$TypeIdentifierTail' [Pr3Base$TypeIdentifierTail] :: Text ;
-[Data[#]]: '$Print-Pr3Base$TypeIdentifierTail' [#] → '$Print2-Pr3Base$TypeIdentifierTail' [#, 0] ;


'$Print-Pr3Base$Instructions' [Pr3Base$Instructions] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Instructions' [#] → '$Print2-Pr3Base$Instructions' [#, 0] ;


'$Print-Pr3Base$Instruction' [Pr3Base$Instruction] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Instruction' [#] → '$Print2-Pr3Base$Instruction' [#, 0] ;


'$Print-Pr3Base$Op' [Pr3Base$Op] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Op' [#] → '$Print2-Pr3Base$Op' [#, 0] ;


'$Print-Pr3Base$Declarations' [Pr3Base$Declarations] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Declarations' [#] → '$Print2-Pr3Base$Declarations' [#, 0] ;


'$Print-Pr3Base$Declaration' [Pr3Base$Declaration] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Declaration' [#] → '$Print2-Pr3Base$Declaration' [#, 0] ;


'$Print-Pr3Base$IfTail' [Pr3Base$IfTail] :: Text ;
-[Data[#]]: '$Print-Pr3Base$IfTail' [#] → '$Print2-Pr3Base$IfTail' [#, 0] ;


'$Print-Pr3Base$Expression' [Pr3Base$Expression] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Expression' [#] → '$Print2-Pr3Base$Expression' [#, 0] ;


'$Print-Pr3Base$Statements' [Pr3Base$Statements] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Statements' [#] → '$Print2-Pr3Base$Statements' [#, 0] ;


'$Print-Pr3Base$Statement' [Pr3Base$Statement] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Statement' [#] → '$Print2-Pr3Base$Statement' [#, 0] ;


'$Print-Pr3Base$Type' [Pr3Base$Type] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Type' [#] → '$Print2-Pr3Base$Type' [#, 0] ;


'$Print-Pr3Base$Sign' [Pr3Base$Sign] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Sign' [#] → '$Print2-Pr3Base$Sign' [#, 0] ;


'$Print-Pr3Base$Mem' [Pr3Base$Mem] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Mem' [#] → '$Print2-Pr3Base$Mem' [#, 0] ;


'$Print-Pr3Base$Regs' [Pr3Base$Regs] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Regs' [#] → '$Print2-Pr3Base$Regs' [#, 0] ;


'$Print-Pr3Base$Reg' [Pr3Base$Reg] :: Text ;
-[Data[#]]: '$Print-Pr3Base$Reg' [#] → '$Print2-Pr3Base$Reg' [#, 0] ;


'$Print-Pr3Base$IDENTIFIER' [Pr3Base$IDENTIFIER] :: Text ;
'$Print-Pr3Base$IDENTIFIER' [#] → '$Print2-Pr3Base$IDENTIFIER' [#, 0] ;

'$Print2-Pr3Base$IDENTIFIER' [Pr3Base$IDENTIFIER, $Numeric] :: Text ;
'$Print2-Pr3Base$IDENTIFIER' [#, #prec] → %n⟪‹StringToText[#]›⟫ ;
-[Free[y_3866]]: '$Print2-Pr3Base$Identifier' [y_3866, #prec] → %n⟪†‹$[Symbol,y_3866]›⟫ ;


'$Print-Pr3Base$INTEGER' [Pr3Base$INTEGER] :: Text ;
'$Print-Pr3Base$INTEGER' [#] → '$Print2-Pr3Base$INTEGER' [#, 0] ;

'$Print2-Pr3Base$INTEGER' [Pr3Base$INTEGER, $Numeric] :: Text ;
'$Print2-Pr3Base$INTEGER' [#, #prec] → %n⟪‹StringToText[#]›⟫ ;


-[Data[#prec]] :
'$Print2-Pr3Base$Program' [ 'Pr3Base$Program__Declarations_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Declarations' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Declarations' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Declarations' [ 'Pr3Base$Declarations__Declaration__Declarations_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Declaration' [#1, 0] › ‹ '$Print2-Pr3Base$Declarations' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Declaration' [#1, 0] › ‹ '$Print2-Pr3Base$Declarations' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Declarations' [ 'Pr3Base$Declarations_' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪()⟫,
  %n⟪⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Declaration' [ 'Pr3Base$Declaration_function_Type__Identifier__ArgumentSignature_{_Statements_}' [#1, #2, #3, #4], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( function ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$ArgumentSignature' [#3, 0] › { ‹ '$Print2-Pr3Base$Statements' [#4, 0] › } )⟫,
  %n⟪ function ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$ArgumentSignature' [#3, 0] › { ‹ '$Print2-Pr3Base$Statements' [#4, 0] › } ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$ArgumentSignature' [ 'Pr3Base$ArgumentSignature_()' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ( ) )⟫,
  %n⟪ ( ) ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$ArgumentSignature' [ 'Pr3Base$ArgumentSignature_(_Type__Identifier__TypeIdentifierTail_)' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ( ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$TypeIdentifierTail' [#3, 0] › ) )⟫,
  %n⟪ ( ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$TypeIdentifierTail' [#3, 0] › ) ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$TypeIdentifierTail' [ 'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( , ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$TypeIdentifierTail' [#3, 0] › )⟫,
  %n⟪ , ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ‹ '$Print2-Pr3Base$TypeIdentifierTail' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$TypeIdentifierTail' [ 'Pr3Base$TypeIdentifierTail_' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( )⟫,
  %n⟪ ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statements' [ 'Pr3Base$Statements__Statement__Statements_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Statement' [#1, 0] › ‹ '$Print2-Pr3Base$Statements' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Statement' [#1, 0] › ‹ '$Print2-Pr3Base$Statements' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statements' [ 'Pr3Base$Statements_' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪()⟫,
  %n⟪⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_{_Statements_}' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( { ‹ '$Print2-Pr3Base$Statements' [#1, 0] › } )⟫,
  %n⟪ { ‹ '$Print2-Pr3Base$Statements' [#1, 0] › } ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_var_Type__Identifier_;' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( var ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ; )⟫,
  %n⟪ var ‹ '$Print2-Pr3Base$Type' [#1, 0] › ‹ '$Print2-Pr3Base$Identifier' [#2, 0] › ; ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_;' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ; )⟫,
  %n⟪ ; ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement__Expression_;' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ; )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ; ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_if(_Expression_)_IfTail_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( if ( ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ) ‹ '$Print2-Pr3Base$IfTail' [#2, 0] › )⟫,
  %n⟪ if ( ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ) ‹ '$Print2-Pr3Base$IfTail' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_while(_Expression_)_Statement_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( while ( ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ) ‹ '$Print2-Pr3Base$Statement' [#2, 0] › )⟫,
  %n⟪ while ( ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ) ‹ '$Print2-Pr3Base$Statement' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_return_Expression_;' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( return ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ; )⟫,
  %n⟪ return ‹ '$Print2-Pr3Base$Expression' [#1, 0] › ; ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Statement' [ 'Pr3Base$Statement_return;' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( return ; )⟫,
  %n⟪ return ; ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$IfTail' [ 'Pr3Base$IfTail__Statement_else_Statement_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Statement' [#1, 0] › else ‹ '$Print2-Pr3Base$Statement' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Statement' [#1, 0] › else ‹ '$Print2-Pr3Base$Statement' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$IfTail' [ 'Pr3Base$IfTail__Statement_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Statement' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Statement' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Type' [ 'Pr3Base$Type_boolean' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( boolean )⟫,
  %n⟪ boolean ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Type' [ 'Pr3Base$Type_int' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( int )⟫,
  %n⟪ int ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Integer_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 10],
  %n⟪( ‹ '$Print2-Pr3Base$Integer' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Integer' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 10],
  %n⟪( ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_()' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 9],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 9] › ( ) )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 9] › ( ) ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_(_Expression_)' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 9],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 9] › ( ‹ '$Print2-Pr3Base$Expression' [#2, 0] › ) )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 9] › ( ‹ '$Print2-Pr3Base$Expression' [#2, 0] › ) ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression_!_Expression_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 8],
  %n⟪( ! ‹ '$Print2-Pr3Base$Expression' [#1, 8] › )⟫,
  %n⟪ ! ‹ '$Print2-Pr3Base$Expression' [#1, 8] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression_-_Expression_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 8],
  %n⟪( - ‹ '$Print2-Pr3Base$Expression' [#1, 8] › )⟫,
  %n⟪ - ‹ '$Print2-Pr3Base$Expression' [#1, 8] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression_+_Expression_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 8],
  %n⟪( + ‹ '$Print2-Pr3Base$Expression' [#1, 8] › )⟫,
  %n⟪ + ‹ '$Print2-Pr3Base$Expression' [#1, 8] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_*_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 7],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 7] › * ‹ '$Print2-Pr3Base$Expression' [#2, 8] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 7] › * ‹ '$Print2-Pr3Base$Expression' [#2, 8] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_+_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 6],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › + ‹ '$Print2-Pr3Base$Expression' [#2, 7] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › + ‹ '$Print2-Pr3Base$Expression' [#2, 7] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_-_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 6],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › - ‹ '$Print2-Pr3Base$Expression' [#2, 7] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › - ‹ '$Print2-Pr3Base$Expression' [#2, 7] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_<_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 5],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › < ‹ '$Print2-Pr3Base$Expression' [#2, 6] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › < ‹ '$Print2-Pr3Base$Expression' [#2, 6] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_>_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 5],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › > ‹ '$Print2-Pr3Base$Expression' [#2, 6] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › > ‹ '$Print2-Pr3Base$Expression' [#2, 6] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_<=_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 5],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › <= ‹ '$Print2-Pr3Base$Expression' [#2, 6] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › <= ‹ '$Print2-Pr3Base$Expression' [#2, 6] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_>=_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 5],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 6] › >= ‹ '$Print2-Pr3Base$Expression' [#2, 6] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 6] › >= ‹ '$Print2-Pr3Base$Expression' [#2, 6] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_==_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 4],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 5] › == ‹ '$Print2-Pr3Base$Expression' [#2, 5] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 5] › == ‹ '$Print2-Pr3Base$Expression' [#2, 5] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_!=_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 4],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 5] › != ‹ '$Print2-Pr3Base$Expression' [#2, 5] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 5] › != ‹ '$Print2-Pr3Base$Expression' [#2, 5] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_&&_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 3],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 3] › && ‹ '$Print2-Pr3Base$Expression' [#2, 4] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 3] › && ‹ '$Print2-Pr3Base$Expression' [#2, 4] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_||_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 2],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 2] › || ‹ '$Print2-Pr3Base$Expression' [#2, 3] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 2] › || ‹ '$Print2-Pr3Base$Expression' [#2, 3] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_=_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 1],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 2] › = ‹ '$Print2-Pr3Base$Expression' [#2, 1] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 2] › = ‹ '$Print2-Pr3Base$Expression' [#2, 1] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Expression' [ 'Pr3Base$Expression__Expression_,_Expression_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Expression' [#1, 1] › , ‹ '$Print2-Pr3Base$Expression' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Expression' [#1, 1] › , ‹ '$Print2-Pr3Base$Expression' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Integer' [ 'Pr3Base$Integer__INTEGER_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$INTEGER' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$INTEGER' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instructions' [ 'Pr3Base$Instructions__Instruction__Instructions_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Instruction' [#1, 0] › ‹ '$Print2-Pr3Base$Instructions' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Instruction' [#1, 0] › ‹ '$Print2-Pr3Base$Instructions' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instructions' [ 'Pr3Base$Instructions_' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪()⟫,
  %n⟪⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instruction' [ 'Pr3Base$Instruction__Identifier_=_Integer_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › = ‹ '$Print2-Pr3Base$Integer' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › = ‹ '$Print2-Pr3Base$Integer' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instruction' [ 'Pr3Base$Instruction__Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instruction' [ 'Pr3Base$Instruction_DCI_Integers_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( DCI ‹ '$Print2-Pr3Base$Integers' [#1, 0] › )⟫,
  %n⟪ DCI ‹ '$Print2-Pr3Base$Integers' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Instruction' [ 'Pr3Base$Instruction__Op_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Op' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Op' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Integers' [ 'Pr3Base$Integers__Integer_,_Integers_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Integer' [#1, 0] ›, ‹ '$Print2-Pr3Base$Integers' [#2, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Integer' [#1, 0] ›, ‹ '$Print2-Pr3Base$Integers' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Integers' [ 'Pr3Base$Integers__Integer_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ‹ '$Print2-Pr3Base$Integer' [#1, 0] › )⟫,
  %n⟪ ‹ '$Print2-Pr3Base$Integer' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_MOV_Reg_,_Arg_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( MOV ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › )⟫,
  %n⟪ MOV ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_MVN_Reg_,_Arg_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( MVN ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › )⟫,
  %n⟪ MVN ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_ADD_Reg_,_Reg_,_Arg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ADD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › )⟫,
  %n⟪ ADD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_SUB_Reg_,_Reg_,_Arg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( SUB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › )⟫,
  %n⟪ SUB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_AND_Reg_,_Reg_,_Arg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( AND ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › )⟫,
  %n⟪ AND ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_ORR_Reg_,_Reg_,_Arg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( ORR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › )⟫,
  %n⟪ ORR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_EOR_Reg_,_Reg_,_Arg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( EOR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › )⟫,
  %n⟪ EOR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_CMP_Reg_,_Arg_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( CMP ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › )⟫,
  %n⟪ CMP ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Arg' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_MUL_Reg_,_Reg_,_Reg_' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( MUL ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#3, 0] › )⟫,
  %n⟪ MUL ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#2, 0] ›, ‹ '$Print2-Pr3Base$Reg' [#3, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_B_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( B ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ B ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BEQ_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BEQ ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BEQ ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BNE_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BNE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BNE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BGT_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BGT ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BGT ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BLT_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BLT ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BLT ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BGE_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BGE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BGE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BLE_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BLE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BLE ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_BL_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( BL ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › )⟫,
  %n⟪ BL ‹ '$Print2-Pr3Base$Identifier' [#1, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_LDR_Reg_,_Mem_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( LDR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › )⟫,
  %n⟪ LDR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_STR_Reg_,_Mem_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( STR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › )⟫,
  %n⟪ STR ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_LDRB_Reg_,_Mem_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( LDRB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › )⟫,
  %n⟪ LDRB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_STRB_Reg_,_Mem_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( STRB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › )⟫,
  %n⟪ STRB ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Mem' [#2, 0] › ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_LDMFD_Reg_!,{_Regs_}' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( LDMFD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›! , {‹ '$Print2-Pr3Base$Regs' [#2, 0] ›} )⟫,
  %n⟪ LDMFD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›! , {‹ '$Print2-Pr3Base$Regs' [#2, 0] ›} ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Op' [ 'Pr3Base$Op_STMFD_Reg_!,{_Regs_}' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( STMFD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›! , {‹ '$Print2-Pr3Base$Regs' [#2, 0] ›} )⟫,
  %n⟪ STMFD ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›! , {‹ '$Print2-Pr3Base$Regs' [#2, 0] ›} ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R0' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R0)⟫,
  %n⟪R0⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R1' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R1)⟫,
  %n⟪R1⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R2' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R2)⟫,
  %n⟪R2⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R3' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R3)⟫,
  %n⟪R3⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R4' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R4)⟫,
  %n⟪R4⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R5' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R5)⟫,
  %n⟪R5⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R6' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R6)⟫,
  %n⟪R6⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R7' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R7)⟫,
  %n⟪R7⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R8' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R8)⟫,
  %n⟪R8⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R9' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R9)⟫,
  %n⟪R9⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R10' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R10)⟫,
  %n⟪R10⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R11' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R11)⟫,
  %n⟪R11⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_R12' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(R12)⟫,
  %n⟪R12⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_SP' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(SP)⟫,
  %n⟪SP⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_LR' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(LR)⟫,
  %n⟪LR⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Reg' [ 'Pr3Base$Reg_PC' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(PC)⟫,
  %n⟪PC⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Regs' [ 'Pr3Base$Regs__Reg_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Reg' [#1, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Reg' [#1, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Regs' [ 'Pr3Base$Regs__Reg_,_Regs_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Regs' [#2, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Regs' [#2, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Arg' [ 'Pr3Base$Arg__Constant_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Constant' [#1, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Constant' [#1, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Arg' [ 'Pr3Base$Arg__Reg_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Reg' [#1, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Reg' [#1, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Arg' [ 'Pr3Base$Arg__Reg_,LSL_Constant_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, LSL ‹ '$Print2-Pr3Base$Constant' [#2, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, LSL ‹ '$Print2-Pr3Base$Constant' [#2, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Arg' [ 'Pr3Base$Arg__Reg_,LSR_Constant_' [#1, #2], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, LSR ‹ '$Print2-Pr3Base$Constant' [#2, 0] ›)⟫,
  %n⟪‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, LSR ‹ '$Print2-Pr3Base$Constant' [#2, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Mem' [ 'Pr3Base$Mem_[_Reg_,_Sign__Arg_]' [#1, #2, #3], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪( [ ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Sign' [#2, 0] › ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ] )⟫,
  %n⟪ [ ‹ '$Print2-Pr3Base$Reg' [#1, 0] ›, ‹ '$Print2-Pr3Base$Sign' [#2, 0] › ‹ '$Print2-Pr3Base$Arg' [#3, 0] › ] ⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Sign' [ 'Pr3Base$Sign_+' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(+)⟫,
  %n⟪+⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Sign' [ 'Pr3Base$Sign_-' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(-)⟫,
  %n⟪-⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Sign' [ 'Pr3Base$Sign_' , #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪()⟫,
  %n⟪⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Constant' [ 'Pr3Base$Constant_#_Integer_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(#‹ '$Print2-Pr3Base$Integer' [#1, 0] ›)⟫,
  %n⟪#‹ '$Print2-Pr3Base$Integer' [#1, 0] ›⟫
]
;


-[Data[#prec]] :
'$Print2-Pr3Base$Constant' [ 'Pr3Base$Constant_&_Identifier_' [#1], #prec ]
→
$[If, $[GreaterThan, #prec, 0],
  %n⟪(&‹ '$Print2-Pr3Base$Identifier' [#1, 0] ›)⟫,
  %n⟪&‹ '$Print2-Pr3Base$Identifier' [#1, 0] ›⟫
]
;



'$Print2-Pr3Base$Reg' [ 'Find' [#1], #prec ]
→
%n⟪'Find' [‹ '$Print2-Pr3Base$Regs' [ '$Print2-Pr3Base$Reg' [#1, 0],0] ›]⟫
;



'$Print2-Pr3Base$Reg' [ 'RegGivenIdentifier' [#1], #prec ]
→
%n⟪'RegGivenIdentifier' [‹ '$Print2-Pr3Base$Identifier' [ '$Print2-Pr3Base$Reg' [#1, 0],0] ›]⟫
;


'$Print-Compile' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_Compile' [#1],
  0]
;


'$Print-CompileDeclarations' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_CompileDeclarations' [#1],
  0]
;


'$Print-CompileDeclaration' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_CompileDeclaration' [#1],
  0]
;


'$Print-Argument' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_Argument' [#1],
  0]
;


'$Print-AllStatements' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_AllStatements' [#1],
  0]
;


'$Print-SingleStatement' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_SingleStatement' [#1],
  0]
;


'$Print-SingleExpression' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_SingleExpression' [#1],
  0]
;


'$Print-SubArguments' [#1]
→
'$Print2-Pr3Base$Instructions' [
  'Pr3Base$Instructions_SubArguments' [#1],
  0]
;

$Print2-Pr3Base$Computed[$Numeric, $Numeric] :: Text ;
$Print2-Pr3Base$Computed[#n, #pr] → %n⟪‹StringToText[NumericToString[#n]]›⟫ ;


/////////////////////////////////////////////////////////////////////////////
// RULES.

<!--RULES FOR SORT Pr3Base$Arg.-->







<!--RULES FOR SORT Pr3Base$Program.-->




<!--RULES FOR SORT Pr3Base$Integers.-->





<!--RULES FOR SORT Pr3Base$Integer.-->




<!--RULES FOR SORT Pr3Base$Constant.-->





<!--RULES FOR SORT Pr3Base$ArgumentSignature.-->





<!--RULES FOR SORT Pr3Base$TypeIdentifierTail.-->





<!--RULES FOR SORT Pr3Base$Instructions.-->













- :
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions_'  ,    #  ] 
→
    #  
;


- :
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   #1  ,    #2  ] ,    #3  ] 
→
    'Pr3Base$Instructions__Instruction__Instructions_' [   #1  ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   #2  ,    #3  ] ] 
;


- :
    'Pr3Base$Instructions_Compile' [   'Pr3Base$Program__Declarations_' [   #1  ] ] 
→
    'Pr3Base$Instructions_CompileDeclarations' [   #1  ] 
;


- :
    'Pr3Base$Instructions_CompileDeclarations' [   'Pr3Base$Declarations__Declaration__Declarations_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions_CompileDeclaration' [   #1  ] ,    'Pr3Base$Instructions_CompileDeclarations' [   #2  ] ] 
;


- :
    'Pr3Base$Instructions_CompileDeclarations' [   'Pr3Base$Declarations_'  ] 
→
    'Pr3Base$Instructions_'  
;


- [Free[name2_2::Identifier]]:
    'Pr3Base$Instructions_CompileDeclaration' [   'Pr3Base$Declaration_function_Type__Identifier__ArgumentSignature_{_Statements_}' [   #1  ,    name2_2  ,    #3  ,    #4  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_STMFD_Reg_!,{_Regs_}' [   'Pr3Base$Reg_SP'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R4'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R5'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R6'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R7'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R8'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R9'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R10'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R11'  ,    'Pr3Base$Regs__Reg_' [   'Pr3Base$Reg_LR'  ] ] ] ] ] ] ] ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_Argument' [   #3  ] ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions_AllStatements' [   #4  ] ,    'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_LDMFD_Reg_!,{_Regs_}' [   'Pr3Base$Reg_SP'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R4'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R5'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R6'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R7'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R8'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R9'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R10'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R11'  ,    'Pr3Base$Regs__Reg_' [   'Pr3Base$Reg_PC'  ] ] ] ] ] ] ] ] ] ] ] ,    'Pr3Base$Instructions_'  ] ] ,    'Pr3Base$Instructions_'  ] ] 
;


- :
    'Pr3Base$Instructions_Argument' [   'Pr3Base$ArgumentSignature_()'  ] 
→
    'Pr3Base$Instructions_'  
;


- [Free[name1_3::Identifier]]:
    'Pr3Base$Instructions_Argument' [   'Pr3Base$ArgumentSignature_(_Type__Identifier__TypeIdentifierTail_)' [   #1  ,    name1_3  ,    'Pr3Base$TypeIdentifierTail_'  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name1_3  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] 
;


- [Free[name2_2::Identifier,name1_3::Identifier]]:
    'Pr3Base$Instructions_Argument' [   'Pr3Base$ArgumentSignature_(_Type__Identifier__TypeIdentifierTail_)' [   #1  ,    name1_3  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #3  ,    name2_2  ,    'Pr3Base$TypeIdentifierTail_'  ] ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name1_3  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R1'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name2_2  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] ] 
;


- [Free[name3_4::Identifier,name2_2::Identifier,name1_3::Identifier]]:
    'Pr3Base$Instructions_Argument' [   'Pr3Base$ArgumentSignature_(_Type__Identifier__TypeIdentifierTail_)' [   #1  ,    name1_3  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #3  ,    name2_2  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #5  ,    name3_4  ,    'Pr3Base$TypeIdentifierTail_'  ] ] ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name1_3  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R1'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name2_2  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R2'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name3_4  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] ] ] 
;


- [Free[name2_2::Identifier,name3_4::Identifier,name4_5::Identifier,name1_3::Identifier]]:
    'Pr3Base$Instructions_Argument' [   'Pr3Base$ArgumentSignature_(_Type__Identifier__TypeIdentifierTail_)' [   #1  ,    name1_3  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #3  ,    name2_2  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #5  ,    name3_4  ,    'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #7  ,    name4_5  ,    'Pr3Base$TypeIdentifierTail_'  ] ] ] ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name1_3  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R1'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name2_2  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R2'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name3_4  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R3'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name4_5  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] ] ] ] 
;


- :
    'Pr3Base$Instructions_AllStatements' [   'Pr3Base$Statements__Statement__Statements_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_STMFD_Reg_!,{_Regs_}' [   'Pr3Base$Reg_SP'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R4'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R5'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R6'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R7'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R8'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R9'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R10'  ,    'Pr3Base$Regs__Reg_,_Regs_' [   'Pr3Base$Reg_R11'  ,    'Pr3Base$Regs__Reg_' [   'Pr3Base$Reg_LR'  ] ] ] ] ] ] ] ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] 
;


- :
    'Pr3Base$Instructions_AllStatements' [   'Pr3Base$Statements_'  ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleStatement' [   'Pr3Base$Statement__Expression_;' [   #1  ] ] 
→
    'Pr3Base$Instructions_SingleExpression' [   #1  ] 
;


- :
    'Pr3Base$Instructions_SingleStatement' [   'Pr3Base$Statement_{_Statements_}' [   #1  ] ] 
→
    'Pr3Base$Instructions_AllStatements' [   #1  ] 
;


- :
    'Pr3Base$Instructions_SingleStatement' [   'Pr3Base$Statement_;'  ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_()' [   #1  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_(_Expression_)' [   #1  ,    #1  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression_!_Expression_' [   #1  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression_-_Expression_' [   #1  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression_+_Expression_' [   #1  ] ] 
→
    'Pr3Base$Instructions_'  
;


- [Fresh[main_6::Identifier]]:
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_*_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   main_6  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_'  ] 
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_+_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_-_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_<_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_>_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_<=_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_>=_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_==_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_!=_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_&&_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_||_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- :
    'Pr3Base$Instructions_SingleExpression' [   'Pr3Base$Expression__Expression_=_Expression_' [   #1  ,    #2  ] ] 
→
    'Pr3Base$Instructions_'  
;


- [Free[name1_3::Identifier]]:
    'Pr3Base$Instructions_SubArguments' [   'Pr3Base$TypeIdentifierTail_,_Type__Identifier__TypeIdentifierTail_' [   #1  ,    name1_3  ,    #3  ] ] 
→
    'Pr3Base$Instructions_{_Instructions_}_Instructions_' [   'Pr3Base$Instructions__Instruction__Instructions_' [   'Pr3Base$Instruction__Op_' [   'Pr3Base$Op_MOV_Reg_,_Arg_' [   'Pr3Base$Reg_R0'  ,    'Pr3Base$Arg__Constant_' [   'Pr3Base$Constant_&_Identifier_' [   name1_3  ] ] ] ] ,    'Pr3Base$Instructions_'  ] ,    'Pr3Base$Instructions_SubArguments' [   #3  ] ] 
;


- :
    'Pr3Base$Instructions_SubArguments' [   'Pr3Base$TypeIdentifierTail_'  ] 
→
    'Pr3Base$Instructions_'  
;



<!--RULES FOR SORT Pr3Base$Instruction.-->







<!--RULES FOR SORT Pr3Base$Op.-->


























<!--RULES FOR SORT Pr3Base$Declarations.-->





<!--RULES FOR SORT Pr3Base$Declaration.-->




<!--RULES FOR SORT Pr3Base$IfTail.-->





<!--RULES FOR SORT Pr3Base$Expression.-->























<!--RULES FOR SORT Pr3Base$Statements.-->





<!--RULES FOR SORT Pr3Base$Statement.-->











<!--RULES FOR SORT Pr3Base$Type.-->





<!--RULES FOR SORT Pr3Base$Sign.-->






<!--RULES FOR SORT Pr3Base$Mem.-->




<!--RULES FOR SORT Pr3Base$Regs.-->





<!--RULES FOR SORT Pr3Base$Reg.-->




















- :
    'Pr3Base$Reg_Find' [   'Pr3Base$Regs__Reg_,_Regs_' [   #r  ,    #rs  ] ] 
→
    #r  
;


- [Free[id_1::Pr3Base$Identifier]]:
   { "idToReg" : {  id_1   :   #rs  }A_idToReg  }  'Pr3Base$Reg_RegGivenIdentifier' [   id_1  ] 
→
    'Pr3Base$Reg_Find' [   #rs  ] 
;




)] //Pr3Base

