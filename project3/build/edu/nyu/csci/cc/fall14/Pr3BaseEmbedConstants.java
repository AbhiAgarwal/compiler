/* Generated By:JavaCC: Do not edit this line. Pr3BaseEmbedConstants.java */
package edu.nyu.csci.cc.fall14;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Pr3BaseEmbedConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta_Arg = 8;
  /** RegularExpression Id. */
  int T_meta_Program = 14;
  /** RegularExpression Id. */
  int T_meta_SYMBOL = 20;
  /** RegularExpression Id. */
  int T_meta_Integers = 26;
  /** RegularExpression Id. */
  int T_meta_Integer = 32;
  /** RegularExpression Id. */
  int T_meta_Constant = 40;
  /** RegularExpression Id. */
  int T_meta_ArgState = 48;
  /** RegularExpression Id. */
  int T_meta_Boolean = 56;
  /** RegularExpression Id. */
  int T_meta_ArgumentSignature = 64;
  /** RegularExpression Id. */
  int T_meta_TypeIdentifierTail = 70;
  /** RegularExpression Id. */
  int T_meta_Instructions = 76;
  /** RegularExpression Id. */
  int T_meta_Instruction = 84;
  /** RegularExpression Id. */
  int T_meta_Identifiers = 90;
  /** RegularExpression Id. */
  int T_meta_Op = 120;
  /** RegularExpression Id. */
  int T_meta_Declarations = 126;
  /** RegularExpression Id. */
  int T_meta_Declaration = 133;
  /** RegularExpression Id. */
  int T_meta_Symbol = 139;
  /** RegularExpression Id. */
  int T_meta_Subste = 145;
  /** RegularExpression Id. */
  int T_meta_IDENTIFIER = 151;
  /** RegularExpression Id. */
  int T_meta_IfTail = 158;
  /** RegularExpression Id. */
  int T_meta_Expression = 175;
  /** RegularExpression Id. */
  int T_meta_Statements = 181;
  /** RegularExpression Id. */
  int T_meta_Statement = 192;
  /** RegularExpression Id. */
  int T_meta_Identifier = 198;
  /** RegularExpression Id. */
  int T_meta_INTEGER = 204;
  /** RegularExpression Id. */
  int T_meta_Type = 212;
  /** RegularExpression Id. */
  int T_meta_Sign = 218;
  /** RegularExpression Id. */
  int T_meta_Mem = 226;
  /** RegularExpression Id. */
  int T_meta_Regs = 232;
  /** RegularExpression Id. */
  int T_meta_Reg = 254;
  /** RegularExpression Id. */
  int T_IDENTIFIER = 257;
  /** RegularExpression Id. */
  int T_INTEGER = 258;
  /** RegularExpression Id. */
  int T_Letter = 259;
  /** RegularExpression Id. */
  int T_LetterEtc = 260;
  /** RegularExpression Id. */
  int T_Digit = 261;
  /** RegularExpression Id. */
  int T_SYMBOL = 262;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_Arg = 1;
  /** Lexical state. */
  int IN_NESTED_META_Arg = 2;
  /** Lexical state. */
  int IN_META_Program = 3;
  /** Lexical state. */
  int IN_NESTED_META_Program = 4;
  /** Lexical state. */
  int IN_META_SYMBOL = 5;
  /** Lexical state. */
  int IN_NESTED_META_SYMBOL = 6;
  /** Lexical state. */
  int IN_META_Integers = 7;
  /** Lexical state. */
  int IN_NESTED_META_Integers = 8;
  /** Lexical state. */
  int IN_META_Integer = 9;
  /** Lexical state. */
  int IN_NESTED_META_Integer = 10;
  /** Lexical state. */
  int IN_META_Constant = 11;
  /** Lexical state. */
  int IN_NESTED_META_Constant = 12;
  /** Lexical state. */
  int IN_META_ArgState = 13;
  /** Lexical state. */
  int IN_NESTED_META_ArgState = 14;
  /** Lexical state. */
  int IN_META_Boolean = 15;
  /** Lexical state. */
  int IN_NESTED_META_Boolean = 16;
  /** Lexical state. */
  int IN_META_ArgumentSignature = 17;
  /** Lexical state. */
  int IN_NESTED_META_ArgumentSignature = 18;
  /** Lexical state. */
  int IN_META_TypeIdentifierTail = 19;
  /** Lexical state. */
  int IN_NESTED_META_TypeIdentifierTail = 20;
  /** Lexical state. */
  int IN_META_Instructions = 21;
  /** Lexical state. */
  int IN_NESTED_META_Instructions = 22;
  /** Lexical state. */
  int IN_META_Instruction = 23;
  /** Lexical state. */
  int IN_NESTED_META_Instruction = 24;
  /** Lexical state. */
  int IN_META_Identifiers = 25;
  /** Lexical state. */
  int IN_NESTED_META_Identifiers = 26;
  /** Lexical state. */
  int IN_META_Op = 27;
  /** Lexical state. */
  int IN_NESTED_META_Op = 28;
  /** Lexical state. */
  int IN_META_Declarations = 29;
  /** Lexical state. */
  int IN_NESTED_META_Declarations = 30;
  /** Lexical state. */
  int IN_META_Declaration = 31;
  /** Lexical state. */
  int IN_NESTED_META_Declaration = 32;
  /** Lexical state. */
  int IN_META_Symbol = 33;
  /** Lexical state. */
  int IN_NESTED_META_Symbol = 34;
  /** Lexical state. */
  int IN_META_Subste = 35;
  /** Lexical state. */
  int IN_NESTED_META_Subste = 36;
  /** Lexical state. */
  int IN_META_IDENTIFIER = 37;
  /** Lexical state. */
  int IN_NESTED_META_IDENTIFIER = 38;
  /** Lexical state. */
  int IN_META_IfTail = 39;
  /** Lexical state. */
  int IN_NESTED_META_IfTail = 40;
  /** Lexical state. */
  int IN_META_Expression = 41;
  /** Lexical state. */
  int IN_NESTED_META_Expression = 42;
  /** Lexical state. */
  int IN_META_Statements = 43;
  /** Lexical state. */
  int IN_NESTED_META_Statements = 44;
  /** Lexical state. */
  int IN_META_Statement = 45;
  /** Lexical state. */
  int IN_NESTED_META_Statement = 46;
  /** Lexical state. */
  int IN_META_Identifier = 47;
  /** Lexical state. */
  int IN_NESTED_META_Identifier = 48;
  /** Lexical state. */
  int IN_META_INTEGER = 49;
  /** Lexical state. */
  int IN_NESTED_META_INTEGER = 50;
  /** Lexical state. */
  int IN_META_Type = 51;
  /** Lexical state. */
  int IN_NESTED_META_Type = 52;
  /** Lexical state. */
  int IN_META_Sign = 53;
  /** Lexical state. */
  int IN_NESTED_META_Sign = 54;
  /** Lexical state. */
  int IN_META_Mem = 55;
  /** Lexical state. */
  int IN_NESTED_META_Mem = 56;
  /** Lexical state. */
  int IN_META_Regs = 57;
  /** Lexical state. */
  int IN_NESTED_META_Regs = 58;
  /** Lexical state. */
  int IN_META_Reg = 59;
  /** Lexical state. */
  int IN_NESTED_META_Reg = 60;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\",\"",
    "\"LSL\"",
    "\"LSR\"",
    "<token of kind 4>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 9>",
    "<token of kind 10>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 15>",
    "<token of kind 16>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 21>",
    "<token of kind 22>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 27>",
    "<token of kind 28>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 33>",
    "\"#\"",
    "\"&\"",
    "<token of kind 36>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 41>",
    "\"{\"",
    "\"}\"",
    "<token of kind 44>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 49>",
    "\"falseBool\"",
    "\"trueBool\"",
    "<token of kind 52>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 57>",
    "\"(\"",
    "\")\"",
    "<token of kind 60>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 65>",
    "<token of kind 66>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 71>",
    "<token of kind 72>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 77>",
    "\"DCI\"",
    "\"=\"",
    "<token of kind 80>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 85>",
    "<token of kind 86>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 91>",
    "\"ADD\"",
    "\"AND\"",
    "\"B\"",
    "\"BEQ\"",
    "\"BGE\"",
    "\"BGT\"",
    "\"BL\"",
    "\"BLE\"",
    "\"BLT\"",
    "\"BNE\"",
    "\"CMP\"",
    "\"EOR\"",
    "\"LDMFD\"",
    "\"!\"",
    "\"LDR\"",
    "\"LDRB\"",
    "\"MOV\"",
    "\"MUL\"",
    "\"MVN\"",
    "\"ORR\"",
    "\"STMFD\"",
    "\"STR\"",
    "\"STRB\"",
    "\"SUB\"",
    "<token of kind 116>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 121>",
    "<token of kind 122>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 127>",
    "\"function\"",
    "<token of kind 129>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 134>",
    "<token of kind 135>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 140>",
    "<token of kind 141>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 146>",
    "<token of kind 147>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 152>",
    "\"else\"",
    "<token of kind 154>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 159>",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "<token of kind 171>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 176>",
    "<token of kind 177>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 182>",
    "\";\"",
    "\"if\"",
    "\"return\"",
    "\"var\"",
    "\"while\"",
    "<token of kind 188>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 193>",
    "<token of kind 194>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 199>",
    "<token of kind 200>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 205>",
    "\"boolean\"",
    "\"int\"",
    "<token of kind 208>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 213>",
    "<token of kind 214>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 219>",
    "\"[\"",
    "\"]\"",
    "<token of kind 222>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 227>",
    "<token of kind 228>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 233>",
    "\"LR\"",
    "\"PC\"",
    "\"R0\"",
    "\"R1\"",
    "\"R10\"",
    "\"R11\"",
    "\"R12\"",
    "\"R2\"",
    "\"R3\"",
    "\"R4\"",
    "\"R5\"",
    "\"R6\"",
    "\"R7\"",
    "\"R8\"",
    "\"R9\"",
    "\"SP\"",
    "<token of kind 250>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 255>",
    "<token of kind 256>",
    "<T_IDENTIFIER>",
    "<T_INTEGER>",
    "<T_Letter>",
    "<T_LetterEtc>",
    "<T_Digit>",
    "<T_SYMBOL>",
  };

}
