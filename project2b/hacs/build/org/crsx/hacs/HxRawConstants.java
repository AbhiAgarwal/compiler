/* Generated By:JavaCC: Do not edit this line. HxRawConstants.java */
package org.crsx.hacs;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HxRawConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MT_HxModule = 1;
  /** RegularExpression Id. */
  int IT_HxModule = 2;
  /** RegularExpression Id. */
  int MT_HxEmbeddedModule = 6;
  /** RegularExpression Id. */
  int IT_HxEmbeddedModule = 7;
  /** RegularExpression Id. */
  int MT_HxDeclarations = 8;
  /** RegularExpression Id. */
  int IT_HxDeclarations = 9;
  /** RegularExpression Id. */
  int MT_HxDeclaration = 10;
  /** RegularExpression Id. */
  int IT_HxDeclaration = 11;
  /** RegularExpression Id. */
  int MT_HxMainKind = 12;
  /** RegularExpression Id. */
  int IT_HxMainKind = 13;
  /** RegularExpression Id. */
  int MT_HxAttributeKind = 14;
  /** RegularExpression Id. */
  int IT_HxAttributeKind = 15;
  /** RegularExpression Id. */
  int MT_HxRegExp = 16;
  /** RegularExpression Id. */
  int IT_HxRegExp = 17;
  /** RegularExpression Id. */
  int MT_HxRegExpChoice = 18;
  /** RegularExpression Id. */
  int IT_HxRegExpChoice = 19;
  /** RegularExpression Id. */
  int MT_HxRegExpUnits = 20;
  /** RegularExpression Id. */
  int IT_HxRegExpUnits = 21;
  /** RegularExpression Id. */
  int MT_HxRegExpUnit = 22;
  /** RegularExpression Id. */
  int IT_HxRegExpUnit = 23;
  /** RegularExpression Id. */
  int MT_HxRepeat = 24;
  /** RegularExpression Id. */
  int IT_HxRepeat = 25;
  /** RegularExpression Id. */
  int MT_HxRegExpSimple = 26;
  /** RegularExpression Id. */
  int IT_HxRegExpSimple = 27;
  /** RegularExpression Id. */
  int MT_HxRegExpSub = 28;
  /** RegularExpression Id. */
  int IT_HxRegExpSub = 29;
  /** RegularExpression Id. */
  int MT_HxAttributeForm = 30;
  /** RegularExpression Id. */
  int IT_HxAttributeForm = 31;
  /** RegularExpression Id. */
  int MT_HxSortNames = 32;
  /** RegularExpression Id. */
  int IT_HxSortNames = 33;
  /** RegularExpression Id. */
  int MT_HxSortAbstraction = 34;
  /** RegularExpression Id. */
  int IT_HxSortAbstraction = 35;
  /** RegularExpression Id. */
  int MT_HxSortAlternatives = 36;
  /** RegularExpression Id. */
  int IT_HxSortAlternatives = 37;
  /** RegularExpression Id. */
  int MT_HxSortAlternative = 38;
  /** RegularExpression Id. */
  int IT_HxSortAlternative = 39;
  /** RegularExpression Id. */
  int MT_HxForm = 40;
  /** RegularExpression Id. */
  int IT_HxForm = 41;
  /** RegularExpression Id. */
  int MT_HxBindersScopeSorts = 42;
  /** RegularExpression Id. */
  int IT_HxBindersScopeSorts = 43;
  /** RegularExpression Id. */
  int MT_HxBindersScopeSort = 44;
  /** RegularExpression Id. */
  int IT_HxBindersScopeSort = 45;
  /** RegularExpression Id. */
  int MT_HxBindersScopeSortInside = 46;
  /** RegularExpression Id. */
  int IT_HxBindersScopeSortInside = 47;
  /** RegularExpression Id. */
  int MT_HxBindersScopeSortInsideTail = 48;
  /** RegularExpression Id. */
  int IT_HxBindersScopeSortInsideTail = 49;
  /** RegularExpression Id. */
  int MT_HxScopeSort = 50;
  /** RegularExpression Id. */
  int IT_HxScopeSort = 51;
  /** RegularExpression Id. */
  int MT_HxSubstituteSorts = 52;
  /** RegularExpression Id. */
  int IT_HxSubstituteSorts = 53;
  /** RegularExpression Id. */
  int MT_HxSubstituteSort = 54;
  /** RegularExpression Id. */
  int IT_HxSubstituteSort = 55;
  /** RegularExpression Id. */
  int MT_HxSort = 56;
  /** RegularExpression Id. */
  int IT_HxSort = 57;
  /** RegularExpression Id. */
  int MT_HxSimpleSorts = 58;
  /** RegularExpression Id. */
  int IT_HxSimpleSorts = 59;
  /** RegularExpression Id. */
  int MT_HxSimpleSortTail = 60;
  /** RegularExpression Id. */
  int IT_HxSimpleSortTail = 61;
  /** RegularExpression Id. */
  int MT_HxSimpleSort = 62;
  /** RegularExpression Id. */
  int IT_HxSimpleSort = 63;
  /** RegularExpression Id. */
  int MT_HxMetaVariables = 64;
  /** RegularExpression Id. */
  int IT_HxMetaVariables = 65;
  /** RegularExpression Id. */
  int MT_HxSortParam = 66;
  /** RegularExpression Id. */
  int IT_HxSortParam = 67;
  /** RegularExpression Id. */
  int MT_HxFormPrec = 68;
  /** RegularExpression Id. */
  int IT_HxFormPrec = 69;
  /** RegularExpression Id. */
  int MT_HxInheritedRefs = 70;
  /** RegularExpression Id. */
  int IT_HxInheritedRefs = 71;
  /** RegularExpression Id. */
  int MT_HxInheritedRef = 72;
  /** RegularExpression Id. */
  int IT_HxInheritedRef = 73;
  /** RegularExpression Id. */
  int MT_HxRule = 74;
  /** RegularExpression Id. */
  int IT_HxRule = 75;
  /** RegularExpression Id. */
  int MT_HxRulePrefix = 76;
  /** RegularExpression Id. */
  int IT_HxRulePrefix = 77;
  /** RegularExpression Id. */
  int MT_HxRulePriority = 78;
  /** RegularExpression Id. */
  int IT_HxRulePriority = 79;
  /** RegularExpression Id. */
  int MT_HxRuleOptions = 80;
  /** RegularExpression Id. */
  int IT_HxRuleOptions = 81;
  /** RegularExpression Id. */
  int MT_HxTopTerm = 82;
  /** RegularExpression Id. */
  int IT_HxTopTerm = 83;
  /** RegularExpression Id. */
  int MT_HxTopPattern = 84;
  /** RegularExpression Id. */
  int IT_HxTopPattern = 85;
  /** RegularExpression Id. */
  int MT_HxAttributes = 86;
  /** RegularExpression Id. */
  int IT_HxAttributes = 87;
  /** RegularExpression Id. */
  int MT_HxSortName = 88;
  /** RegularExpression Id. */
  int IT_HxSortName = 89;
  /** RegularExpression Id. */
  int MT_HxConstructor = 90;
  /** RegularExpression Id. */
  int IT_HxConstructor = 91;
  /** RegularExpression Id. */
  int MT_HxTerm = 92;
  /** RegularExpression Id. */
  int IT_HxTerm = 93;
  /** RegularExpression Id. */
  int MT_HxPattern = 94;
  /** RegularExpression Id. */
  int IT_HxPattern = 95;
  /** RegularExpression Id. */
  int MT_HxScopes = 96;
  /** RegularExpression Id. */
  int IT_HxScopes = 97;
  /** RegularExpression Id. */
  int MT_HxScope = 98;
  /** RegularExpression Id. */
  int IT_HxScope = 99;
  /** RegularExpression Id. */
  int MT_HxVariables = 100;
  /** RegularExpression Id. */
  int IT_HxVariables = 101;
  /** RegularExpression Id. */
  int MT_HxVariableList = 102;
  /** RegularExpression Id. */
  int IT_HxVariableList = 103;
  /** RegularExpression Id. */
  int MT_HxTerms = 104;
  /** RegularExpression Id. */
  int IT_HxTerms = 105;
  /** RegularExpression Id. */
  int MT_HxAttribute = 106;
  /** RegularExpression Id. */
  int IT_HxAttribute = 107;
  /** RegularExpression Id. */
  int MT_HxSystemAttribute = 108;
  /** RegularExpression Id. */
  int IT_HxSystemAttribute = 109;
  /** RegularExpression Id. */
  int MT_HxAttributeValue = 110;
  /** RegularExpression Id. */
  int IT_HxAttributeValue = 111;
  /** RegularExpression Id. */
  int MT_HxConcrete = 112;
  /** RegularExpression Id. */
  int IT_HxConcrete = 113;
  /** RegularExpression Id. */
  int MT_HxConcreteText = 114;
  /** RegularExpression Id. */
  int IT_HxConcreteText = 115;
  /** RegularExpression Id. */
  int T_HX_CONCRETE = 120;
  /** RegularExpression Id. */
  int MT_HxModuleName = 126;
  /** RegularExpression Id. */
  int IT_HxModuleName = 127;
  /** RegularExpression Id. */
  int MT_HxVariable = 128;
  /** RegularExpression Id. */
  int IT_HxVariable = 129;
  /** RegularExpression Id. */
  int MT_HxMetaVariable = 130;
  /** RegularExpression Id. */
  int IT_HxMetaVariable = 131;
  /** RegularExpression Id. */
  int MT_HxAttributeName = 132;
  /** RegularExpression Id. */
  int IT_HxAttributeName = 133;
  /** RegularExpression Id. */
  int MT_HxSeparator = 134;
  /** RegularExpression Id. */
  int IT_HxSeparator = 135;
  /** RegularExpression Id. */
  int MT_HxTokenName = 136;
  /** RegularExpression Id. */
  int IT_HxTokenName = 137;
  /** RegularExpression Id. */
  int MT_HxFragmentRef = 138;
  /** RegularExpression Id. */
  int IT_HxFragmentRef = 139;
  /** RegularExpression Id. */
  int MT_HxRegExpWord = 140;
  /** RegularExpression Id. */
  int IT_HxRegExpWord = 141;
  /** RegularExpression Id. */
  int MT_HxLiteral = 142;
  /** RegularExpression Id. */
  int IT_HxLiteral = 143;
  /** RegularExpression Id. */
  int MT_HxNumber = 144;
  /** RegularExpression Id. */
  int IT_HxNumber = 145;
  /** RegularExpression Id. */
  int MT_HxNatural = 146;
  /** RegularExpression Id. */
  int IT_HxNatural = 147;
  /** RegularExpression Id. */
  int MT_HxString = 148;
  /** RegularExpression Id. */
  int IT_HxString = 149;
  /** RegularExpression Id. */
  int MT_HxRegExpClass = 150;
  /** RegularExpression Id. */
  int IT_HxRegExpClass = 151;
  /** RegularExpression Id. */
  int MT_HxCC = 152;
  /** RegularExpression Id. */
  int IT_HxCC = 153;
  /** RegularExpression Id. */
  int MT_HxCC_RangesTop = 154;
  /** RegularExpression Id. */
  int IT_HxCC_RangesTop = 155;
  /** RegularExpression Id. */
  int MT_HxCC_Ranges = 156;
  /** RegularExpression Id. */
  int IT_HxCC_Ranges = 157;
  /** RegularExpression Id. */
  int MT_HxCC_RangeTail = 158;
  /** RegularExpression Id. */
  int IT_HxCC_RangeTail = 159;
  /** RegularExpression Id. */
  int MT_HxCC_FirstRangeStartChar = 160;
  /** RegularExpression Id. */
  int IT_HxCC_FirstRangeStartChar = 161;
  /** RegularExpression Id. */
  int MT_HxCC_NonDashRangeStartChar = 162;
  /** RegularExpression Id. */
  int IT_HxCC_NonDashRangeStartChar = 163;
  /** RegularExpression Id. */
  int MT_HxCC_RangeChar = 164;
  /** RegularExpression Id. */
  int IT_HxCC_RangeChar = 165;
  /** RegularExpression Id. */
  int MT_HxParsedForm = 166;
  /** RegularExpression Id. */
  int IT_HxParsedForm = 167;
  /** RegularExpression Id. */
  int MT_HxPP = 168;
  /** RegularExpression Id. */
  int IT_HxPP = 169;
  /** RegularExpression Id. */
  int MT_HxPPConcreteSpace = 170;
  /** RegularExpression Id. */
  int IT_HxPPConcreteSpace = 171;
  /** RegularExpression Id. */
  int MT_HxPPConcreteWord = 172;
  /** RegularExpression Id. */
  int IT_HxPPConcreteWord = 173;
  /** RegularExpression Id. */
  int MT_HxPPUnconcrete = 174;
  /** RegularExpression Id. */
  int IT_HxPPUnconcrete = 175;
  /** RegularExpression Id. */
  int MT_HxScopeSortPrec = 176;
  /** RegularExpression Id. */
  int IT_HxScopeSortPrec = 177;
  /** RegularExpression Id. */
  int T_HX_PP_UNCONCRETE = 182;
  /** RegularExpression Id. */
  int T_HX_EMBEDDED = 184;
  /** RegularExpression Id. */
  int T_HX_SEMI = 186;
  /** RegularExpression Id. */
  int T_HX_BAR = 187;
  /** RegularExpression Id. */
  int T_HX_LPAREN = 188;
  /** RegularExpression Id. */
  int T_HX_RPAREN = 189;
  /** RegularExpression Id. */
  int T_HX_STAR = 190;
  /** RegularExpression Id. */
  int T_HX_PLUS = 191;
  /** RegularExpression Id. */
  int T_HX_QUEST = 192;
  /** RegularExpression Id. */
  int T_HX_SUB = 193;
  /** RegularExpression Id. */
  int T_HX_DOT = 194;
  /** RegularExpression Id. */
  int T_HX_COLON = 195;
  /** RegularExpression Id. */
  int T_HX_LBRACE = 196;
  /** RegularExpression Id. */
  int T_HX_RBRACE = 197;
  /** RegularExpression Id. */
  int T_HX_LBRACKET = 198;
  /** RegularExpression Id. */
  int T_HX_RBRACKET = 199;
  /** RegularExpression Id. */
  int T_HX_COMMA = 200;
  /** RegularExpression Id. */
  int T_HX_FORALL = 201;
  /** RegularExpression Id. */
  int T_HX_ARROW = 202;
  /** RegularExpression Id. */
  int T_HX_UP = 203;
  /** RegularExpression Id. */
  int T_HX_DOWN = 204;
  /** RegularExpression Id. */
  int T_HX_NOT = 205;
  /** RegularExpression Id. */
  int T_HX_AT = 206;
  /** RegularExpression Id. */
  int T_HX_DOTTEDNAME = 207;
  /** RegularExpression Id. */
  int T_HX_MODULE = 208;
  /** RegularExpression Id. */
  int T_HX_SORT = 209;
  /** RegularExpression Id. */
  int T_HX_MAIN = 210;
  /** RegularExpression Id. */
  int T_HX_DATA = 211;
  /** RegularExpression Id. */
  int T_HX_SCHEME = 212;
  /** RegularExpression Id. */
  int T_HX_AUTOMATIC = 213;
  /** RegularExpression Id. */
  int T_HX_SYMBOL = 214;
  /** RegularExpression Id. */
  int T_HX_STATIC = 215;
  /** RegularExpression Id. */
  int T_HX_ATTRIBUTE = 216;
  /** RegularExpression Id. */
  int T_HX_COMPOSE = 217;
  /** RegularExpression Id. */
  int T_HX_SUGAR = 218;
  /** RegularExpression Id. */
  int T_HX_RULE = 219;
  /** RegularExpression Id. */
  int T_HX_PRIORITY = 220;
  /** RegularExpression Id. */
  int T_HX_DEFAULT = 221;
  /** RegularExpression Id. */
  int T_HX_IMPORT = 222;
  /** RegularExpression Id. */
  int T_HX_TAG = 223;
  /** RegularExpression Id. */
  int T_HX_BINDS = 224;
  /** RegularExpression Id. */
  int T_HX_AS = 225;
  /** RegularExpression Id. */
  int T_HX_SPACE = 226;
  /** RegularExpression Id. */
  int T_HX_TOKEN = 227;
  /** RegularExpression Id. */
  int T_HX_FRAGMENT = 228;
  /** RegularExpression Id. */
  int T_HX_NESTED = 229;
  /** RegularExpression Id. */
  int T_HX_FRAGMENT_REF = 230;
  /** RegularExpression Id. */
  int T_HX_RE_NAME = 231;
  /** RegularExpression Id. */
  int T_HX_RE_WORD = 232;
  /** RegularExpression Id. */
  int T_HX_META = 233;
  /** RegularExpression Id. */
  int T_HX_VAR = 234;
  /** RegularExpression Id. */
  int T_HX_NATURAL = 235;
  /** RegularExpression Id. */
  int T_HX_INTEGER = 236;
  /** RegularExpression Id. */
  int T_HX_UNNATURAL = 237;
  /** RegularExpression Id. */
  int T_HX_STRING = 238;
  /** RegularExpression Id. */
  int T_HX_STRING1CHAR = 239;
  /** RegularExpression Id. */
  int T_HX_STRING2CHAR = 240;
  /** RegularExpression Id. */
  int T_HX_ESCAPEDCHAR = 241;
  /** RegularExpression Id. */
  int T_HX_HEX = 242;
  /** RegularExpression Id. */
  int T_HX_CHAR_CLASS = 243;
  /** RegularExpression Id. */
  int T_HX_CC_NOT = 244;
  /** RegularExpression Id. */
  int T_HX_CC_RBRACKET = 245;
  /** RegularExpression Id. */
  int T_HX_CC_DASH = 246;
  /** RegularExpression Id. */
  int T_HX_CC_OTHER = 247;
  /** RegularExpression Id. */
  int T_HX_CC_SKIP = 248;
  /** RegularExpression Id. */
  int T_HX_PP_CONCRETE_SPACE = 249;
  /** RegularExpression Id. */
  int T_HX_PP_CONCRETE_WORD = 250;
  /** RegularExpression Id. */
  int T_HX_CONSTRUCTOR = 251;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int HX_RE = 1;
  /** Lexical state. */
  int HX_IN_CONCRETE = 2;
  /** Lexical state. */
  int HX_IN_NESTED_CONCRETE = 3;
  /** Lexical state. */
  int HX_NESTED_COMMENT = 4;
  /** Lexical state. */
  int HX_CC = 5;
  /** Lexical state. */
  int HX_PP = 6;
  /** Lexical state. */
  int IN_PP_UNCONCRETE = 7;
  /** Lexical state. */
  int IN_PP_NESTED_UNCONCRETE = 8;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<MT_HxModule>",
    "\"%HxModule\"",
    "\"\\u2983\"",
    "\"\\u2225\"",
    "\"\\u2984\"",
    "<MT_HxEmbeddedModule>",
    "\"%HxEmbeddedModule\"",
    "<MT_HxDeclarations>",
    "\"%HxDeclarations\"",
    "<MT_HxDeclaration>",
    "\"%HxDeclaration\"",
    "<MT_HxMainKind>",
    "\"%HxMainKind\"",
    "<MT_HxAttributeKind>",
    "\"%HxAttributeKind\"",
    "<MT_HxRegExp>",
    "\"%HxRegExp\"",
    "<MT_HxRegExpChoice>",
    "\"%HxRegExpChoice\"",
    "<MT_HxRegExpUnits>",
    "\"%HxRegExpUnits\"",
    "<MT_HxRegExpUnit>",
    "\"%HxRegExpUnit\"",
    "<MT_HxRepeat>",
    "\"%HxRepeat\"",
    "<MT_HxRegExpSimple>",
    "\"%HxRegExpSimple\"",
    "<MT_HxRegExpSub>",
    "\"%HxRegExpSub\"",
    "<MT_HxAttributeForm>",
    "\"%HxAttributeForm\"",
    "<MT_HxSortNames>",
    "\"%HxSortNames\"",
    "<MT_HxSortAbstraction>",
    "\"%HxSortAbstraction\"",
    "<MT_HxSortAlternatives>",
    "\"%HxSortAlternatives\"",
    "<MT_HxSortAlternative>",
    "\"%HxSortAlternative\"",
    "<MT_HxForm>",
    "\"%HxForm\"",
    "<MT_HxBindersScopeSorts>",
    "\"%HxBindersScopeSorts\"",
    "<MT_HxBindersScopeSort>",
    "\"%HxBindersScopeSort\"",
    "<MT_HxBindersScopeSortInside>",
    "\"%HxBindersScopeSortInside\"",
    "<MT_HxBindersScopeSortInsideTail>",
    "\"%HxBindersScopeSortInsideTail\"",
    "<MT_HxScopeSort>",
    "\"%HxScopeSort\"",
    "<MT_HxSubstituteSorts>",
    "\"%HxSubstituteSorts\"",
    "<MT_HxSubstituteSort>",
    "\"%HxSubstituteSort\"",
    "<MT_HxSort>",
    "\"%HxSort\"",
    "<MT_HxSimpleSorts>",
    "\"%HxSimpleSorts\"",
    "<MT_HxSimpleSortTail>",
    "\"%HxSimpleSortTail\"",
    "<MT_HxSimpleSort>",
    "\"%HxSimpleSort\"",
    "<MT_HxMetaVariables>",
    "\"%HxMetaVariables\"",
    "<MT_HxSortParam>",
    "\"%HxSortParam\"",
    "<MT_HxFormPrec>",
    "\"%HxFormPrec\"",
    "<MT_HxInheritedRefs>",
    "\"%HxInheritedRefs\"",
    "<MT_HxInheritedRef>",
    "\"%HxInheritedRef\"",
    "<MT_HxRule>",
    "\"%HxRule\"",
    "<MT_HxRulePrefix>",
    "\"%HxRulePrefix\"",
    "<MT_HxRulePriority>",
    "\"%HxRulePriority\"",
    "<MT_HxRuleOptions>",
    "\"%HxRuleOptions\"",
    "<MT_HxTopTerm>",
    "\"%HxTopTerm\"",
    "<MT_HxTopPattern>",
    "\"%HxTopPattern\"",
    "<MT_HxAttributes>",
    "\"%HxAttributes\"",
    "<MT_HxSortName>",
    "\"%HxSortName\"",
    "<MT_HxConstructor>",
    "\"%HxConstructor\"",
    "<MT_HxTerm>",
    "\"%HxTerm\"",
    "<MT_HxPattern>",
    "\"%HxPattern\"",
    "<MT_HxScopes>",
    "\"%HxScopes\"",
    "<MT_HxScope>",
    "\"%HxScope\"",
    "<MT_HxVariables>",
    "\"%HxVariables\"",
    "<MT_HxVariableList>",
    "\"%HxVariableList\"",
    "<MT_HxTerms>",
    "\"%HxTerms\"",
    "<MT_HxAttribute>",
    "\"%HxAttribute\"",
    "<MT_HxSystemAttribute>",
    "\"%HxSystemAttribute\"",
    "<MT_HxAttributeValue>",
    "\"%HxAttributeValue\"",
    "<MT_HxConcrete>",
    "\"%HxConcrete\"",
    "<MT_HxConcreteText>",
    "\"%HxConcreteText\"",
    "\"\\u27e6\"",
    "\"\\u27e6\"",
    "\"\\u27e6\"",
    "\"\\u27e7\"",
    "\"\\u27e7\"",
    "<token of kind 121>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 125>",
    "<MT_HxModuleName>",
    "\"%HxModuleName\"",
    "<MT_HxVariable>",
    "\"%HxVariable\"",
    "<MT_HxMetaVariable>",
    "\"%HxMetaVariable\"",
    "<MT_HxAttributeName>",
    "\"%HxAttributeName\"",
    "<MT_HxSeparator>",
    "\"%HxSeparator\"",
    "<MT_HxTokenName>",
    "\"%HxTokenName\"",
    "<MT_HxFragmentRef>",
    "\"%HxFragmentRef\"",
    "<MT_HxRegExpWord>",
    "\"%HxRegExpWord\"",
    "<MT_HxLiteral>",
    "\"%HxLiteral\"",
    "<MT_HxNumber>",
    "\"%HxNumber\"",
    "<MT_HxNatural>",
    "\"%HxNatural\"",
    "<MT_HxString>",
    "\"%HxString\"",
    "<MT_HxRegExpClass>",
    "\"%HxRegExpClass\"",
    "<MT_HxCC>",
    "\"%HxCC\"",
    "<MT_HxCC_RangesTop>",
    "\"%HxCC_RangesTop\"",
    "<MT_HxCC_Ranges>",
    "\"%HxCC_Ranges\"",
    "<MT_HxCC_RangeTail>",
    "\"%HxCC_RangeTail\"",
    "<MT_HxCC_FirstRangeStartChar>",
    "\"%HxCC_FirstRangeStartChar\"",
    "<MT_HxCC_NonDashRangeStartChar>",
    "\"%HxCC_NonDashRangeStartChar\"",
    "<MT_HxCC_RangeChar>",
    "\"%HxCC_RangeChar\"",
    "<MT_HxParsedForm>",
    "\"%HxParsedForm\"",
    "<MT_HxPP>",
    "\"%HxPP\"",
    "<MT_HxPPConcreteSpace>",
    "\"%HxPPConcreteSpace\"",
    "<MT_HxPPConcreteWord>",
    "\"%HxPPConcreteWord\"",
    "<MT_HxPPUnconcrete>",
    "\"%HxPPUnconcrete\"",
    "<MT_HxScopeSortPrec>",
    "\"%HxScopeSortPrec\"",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 183>",
    "<T_HX_EMBEDDED>",
    "<token of kind 185>",
    "\";\"",
    "\"|\"",
    "\"(\"",
    "\")\"",
    "\"*\"",
    "\"+\"",
    "\"?\"",
    "\"_\"",
    "\".\"",
    "\":\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"\\u2200\"",
    "\"\\u2192\"",
    "\"\\u2191\"",
    "\"\\u2193\"",
    "\"\\u00ac\"",
    "\"@\"",
    "<T_HX_DOTTEDNAME>",
    "\"module\"",
    "\"sort\"",
    "\"main\"",
    "\"data\"",
    "\"scheme\"",
    "\"automatic\"",
    "\"symbol\"",
    "\"static\"",
    "\"attribute\"",
    "\"compose\"",
    "\"sugar\"",
    "\"rule\"",
    "\"priority\"",
    "\"default\"",
    "\"import\"",
    "\"tag\"",
    "\"binds\"",
    "\"as\"",
    "\"space\"",
    "\"token\"",
    "\"fragment\"",
    "\"nested\"",
    "<T_HX_FRAGMENT_REF>",
    "<T_HX_RE_NAME>",
    "<T_HX_RE_WORD>",
    "<T_HX_META>",
    "<T_HX_VAR>",
    "<T_HX_NATURAL>",
    "<T_HX_INTEGER>",
    "<T_HX_UNNATURAL>",
    "<T_HX_STRING>",
    "<T_HX_STRING1CHAR>",
    "<T_HX_STRING2CHAR>",
    "<T_HX_ESCAPEDCHAR>",
    "<T_HX_HEX>",
    "<T_HX_CHAR_CLASS>",
    "\"^\"",
    "\"]\"",
    "\"-\"",
    "<T_HX_CC_OTHER>",
    "\"\\u0001\"",
    "<T_HX_PP_CONCRETE_SPACE>",
    "<T_HX_PP_CONCRETE_WORD>",
    "<T_HX_CONSTRUCTOR>",
  };

}
