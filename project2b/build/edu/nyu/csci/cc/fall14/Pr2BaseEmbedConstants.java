/* Generated By:JavaCC: Do not edit this line. Pr2BaseEmbedConstants.java */
package edu.nyu.csci.cc.fall14;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Pr2BaseEmbedConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_meta_Program = 5;
  /** RegularExpression Id. */
  int T_meta_Declarations = 11;
  /** RegularExpression Id. */
  int T_meta_Declaration = 21;
  /** RegularExpression Id. */
  int T_meta_Members = 27;
  /** RegularExpression Id. */
  int T_meta_Member = 34;
  /** RegularExpression Id. */
  int T_meta_ArgumentSignature = 42;
  /** RegularExpression Id. */
  int T_meta_TypeIdentifierTail = 49;
  /** RegularExpression Id. */
  int T_meta_Statements = 55;
  /** RegularExpression Id. */
  int T_meta_Statement = 65;
  /** RegularExpression Id. */
  int T_meta_IfTail = 72;
  /** RegularExpression Id. */
  int T_meta_Type = 82;
  /** RegularExpression Id. */
  int T_meta_Expression = 106;
  /** RegularExpression Id. */
  int T_meta_Literal = 112;
  /** RegularExpression Id. */
  int T_meta_SimpleLiteral = 118;
  /** RegularExpression Id. */
  int T_meta_ObjectLiteral = 124;
  /** RegularExpression Id. */
  int T_meta_KeyValueTail = 130;
  /** RegularExpression Id. */
  int T_meta_KeyValue = 137;
  /** RegularExpression Id. */
  int T_meta_Identifier = 143;
  /** RegularExpression Id. */
  int T_meta_Integer = 149;
  /** RegularExpression Id. */
  int T_meta_String = 155;
  /** RegularExpression Id. */
  int T_Identifier = 158;
  /** RegularExpression Id. */
  int T_Integer = 159;
  /** RegularExpression Id. */
  int T_String = 160;
  /** RegularExpression Id. */
  int T_Letter = 161;
  /** RegularExpression Id. */
  int T_LetterEtc = 162;
  /** RegularExpression Id. */
  int T_Digit = 163;
  /** RegularExpression Id. */
  int T_Escape = 164;
  /** RegularExpression Id. */
  int T_Hex = 165;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_META_Program = 1;
  /** Lexical state. */
  int IN_NESTED_META_Program = 2;
  /** Lexical state. */
  int IN_META_Declarations = 3;
  /** Lexical state. */
  int IN_NESTED_META_Declarations = 4;
  /** Lexical state. */
  int IN_META_Declaration = 5;
  /** Lexical state. */
  int IN_NESTED_META_Declaration = 6;
  /** Lexical state. */
  int IN_META_Members = 7;
  /** Lexical state. */
  int IN_NESTED_META_Members = 8;
  /** Lexical state. */
  int IN_META_Member = 9;
  /** Lexical state. */
  int IN_NESTED_META_Member = 10;
  /** Lexical state. */
  int IN_META_ArgumentSignature = 11;
  /** Lexical state. */
  int IN_NESTED_META_ArgumentSignature = 12;
  /** Lexical state. */
  int IN_META_TypeIdentifierTail = 13;
  /** Lexical state. */
  int IN_NESTED_META_TypeIdentifierTail = 14;
  /** Lexical state. */
  int IN_META_Statements = 15;
  /** Lexical state. */
  int IN_NESTED_META_Statements = 16;
  /** Lexical state. */
  int IN_META_Statement = 17;
  /** Lexical state. */
  int IN_NESTED_META_Statement = 18;
  /** Lexical state. */
  int IN_META_IfTail = 19;
  /** Lexical state. */
  int IN_NESTED_META_IfTail = 20;
  /** Lexical state. */
  int IN_META_Type = 21;
  /** Lexical state. */
  int IN_NESTED_META_Type = 22;
  /** Lexical state. */
  int IN_META_Expression = 23;
  /** Lexical state. */
  int IN_NESTED_META_Expression = 24;
  /** Lexical state. */
  int IN_META_Literal = 25;
  /** Lexical state. */
  int IN_NESTED_META_Literal = 26;
  /** Lexical state. */
  int IN_META_SimpleLiteral = 27;
  /** Lexical state. */
  int IN_NESTED_META_SimpleLiteral = 28;
  /** Lexical state. */
  int IN_META_ObjectLiteral = 29;
  /** Lexical state. */
  int IN_NESTED_META_ObjectLiteral = 30;
  /** Lexical state. */
  int IN_META_KeyValueTail = 31;
  /** Lexical state. */
  int IN_NESTED_META_KeyValueTail = 32;
  /** Lexical state. */
  int IN_META_KeyValue = 33;
  /** Lexical state. */
  int IN_NESTED_META_KeyValue = 34;
  /** Lexical state. */
  int IN_META_Identifier = 35;
  /** Lexical state. */
  int IN_NESTED_META_Identifier = 36;
  /** Lexical state. */
  int IN_META_Integer = 37;
  /** Lexical state. */
  int IN_NESTED_META_Integer = 38;
  /** Lexical state. */
  int IN_META_String = 39;
  /** Lexical state. */
  int IN_NESTED_META_String = 40;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 12>",
    "\"class\"",
    "\"{\"",
    "\"}\"",
    "\"function\"",
    "<token of kind 17>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 22>",
    "<token of kind 23>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 28>",
    "\";\"",
    "<token of kind 30>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 35>",
    "\"(\"",
    "\")\"",
    "<token of kind 38>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 43>",
    "\",\"",
    "<token of kind 45>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 50>",
    "<token of kind 51>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 56>",
    "\"if\"",
    "\"return\"",
    "\"var\"",
    "\"while\"",
    "<token of kind 61>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 66>",
    "\"else\"",
    "<token of kind 68>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 73>",
    "\"boolean\"",
    "\"int\"",
    "\"string\"",
    "\"void\"",
    "<token of kind 78>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 83>",
    "\"+=\"",
    "\"=\"",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"%\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\".\"",
    "\"this\"",
    "<token of kind 102>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 107>",
    "<token of kind 108>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 113>",
    "<token of kind 114>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 119>",
    "<token of kind 120>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 125>",
    "<token of kind 126>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 131>",
    "\":\"",
    "<token of kind 133>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 138>",
    "<token of kind 139>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 144>",
    "<token of kind 145>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 150>",
    "<token of kind 151>",
    "\"\\u27e8\"",
    "\"\\u27e8\"",
    "\"\\u27e9\"",
    "\"\\u27e9\"",
    "<token of kind 156>",
    "<token of kind 157>",
    "<T_Identifier>",
    "<T_Integer>",
    "<T_String>",
    "<T_Letter>",
    "<T_LetterEtc>",
    "<T_Digit>",
    "<T_Escape>",
    "<T_Hex>",
  };

}
